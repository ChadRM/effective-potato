ECS Containers Challenge Checks
	 April's co-worker suddenly leaves the company. Her co-worker Jeff, being responsible for all the companies micro services and build-pipelines, has been over using resources, like virtual machines for small micro services. April receives word she is to now manage her growing companies services and micro services CI/CD pipelines and infrastructure, without any help. Knowing what she has learning at Cloud Assessments about containers, and being the only one tasked  to manage the companies application services,  April decides to containerize the companies main Rails App and deploy to AWS ECS. 

	 Her boss says that she'll be bonused on savings of the platform and improvements to the scalability.


  Scenario 1a: Dockerize a rails app
  	Checks:
  		Was the container built today?
  		Does the back end rails app respond?

  Scenario 1b: Dockerize a PHP app
  	Checks:
  		Was the container built today?
  		Does the back end php app respond?

  Scenario 1c: Dockerize a node.js app
  	Checks:
  		Was the container built today?
  		Does the back end node.js app respond?

  Scenario 1d: Dockerize a python app
  	Checks:
  		Was the container built today?
  		Does the app respond?

  Scenario 2: Congifure ECS Container Registry and Upload the Dockerized App
  	Checks:
  		Was the repo built today?
  		Does the repo have appropriate permissions set?
  		Has the appropriate docker image been added to the repo?

  Scenario 3: Install ECS Agent and Create Container Instances
  	Checks:
  		Was the image built today?
  		Does it contain the ECS Log Agent installed and functioning?

  Scenario 4: Providing persistent volumes
  	Checks:
  		Was the volume created today?
  		Does it have the appropriate files?

  Scenario 5: Managing Secrets
  	Checks:
  		ECS Systems Manager Parameter Store?
      Appropriate environment variables set in the container?

  Scenario 6: Set Up Montitoring // and testing?
  	Checks:
      Is there monitoring data from today from the container?

  Scenario 7: Configure Auto Scaling
  	Container special consideration -> auto clean up old docker images
    // Can we put load on labs to see if things will auto-scale?
      Checks:
        If we CAN put load on the labs, then do it and see if stuff autoscales
        if not, then we should check the conditions set up

  Scenario N: Capstone -- EVERYTHING in One!
    Take an app, dockerize it, build the image with ECS agent, build a registry, put the image in the registry, set up secrets & db?, 
    auto scale it!

Needs:
  * Sample application(s) in initial non-dockerized state
  * Same app(s) in docker image(s) (unless we want students to roll their own)
  * simple db schema

